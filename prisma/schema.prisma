// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  walletAddress String    @map("wallet_address") @unique
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  ownerships    UserPropertyOwnership[] @relation("OwnershipByUser")

  @@map("users")
}

model Property {
  id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  marketAddress String             @map("market_address")
  tokenAddress  String             @map("token_address")
  address       String             @map("address")
  city          String             @map("city")
  state         String             @map("state")
  country       String             @map("country")
  type          String             @map("type")
  chainId       Int?               @map("chain_id")
  tokenName     String?            @map("token_name")
  tokenSymbol   String?            @map("token_symbol")
  totalSupply   Int?               @map("total_supply")
  latitude      String?            @map("latitude")
  longitude     String?            @map("longitude")
  description   String             @map("description") @db.Text
  isFeatured    Boolean?           @map("is_featured")
  isUpcoming    Boolean?           @map("is_upcoming")
  isAftermarket Boolean?           @map("is_aftermarket")
  createdBy     String             @map("created_by")
  updatedBy     String             @map("updated_by")
  createdAt     DateTime           @default(now()) @map("created_at")
  updatedAt     DateTime           @updatedAt @map("updated_at")
  deletedAt     DateTime?          @map("deleted_at")
  facilities    PropertyFacility[] @relation("PropertyFacilities")
  images        PropertyImage[]    @relation("PropertyImages")
  ownerships    UserPropertyOwnership[] @relation("OwnershipOfProperty")

  @@map("properties")
}

model UserPropertyOwnership {
  walletAddress String    @map("wallet_address") 
  propertyId    String    @map("property_id") @db.Uuid
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  user       User      @relation(fields: [walletAddress], references: [walletAddress], name: "OwnershipByUser")
  property   Property  @relation(fields: [propertyId], references: [id], name: "OwnershipOfProperty")

  @@id(name: "walletAddress_propertyId", [walletAddress, propertyId]) 
  @@unique([walletAddress, propertyId]) 

  @@map("user_property_ownerships")
}


model PropertyFacility {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  propertyId  String   @map("property_id") @db.Uuid
  type        String   @map("type")
  facility    String   @map("facility")
  isHighlight Boolean  @map("is_highlight")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  property Property @relation(fields: [propertyId], references: [id], name: "PropertyFacilities")

  @@map("property_facilities")
}

model PropertyImage {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  propertyId  String   @map("property_id") @db.Uuid
  image       String   @map("image")
  isHighlight Boolean  @map("is_highlight")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  property Property @relation(fields: [propertyId], references: [id], name: "PropertyImages")

  @@map("property_images")
}



model PropertyListingRequest {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String   @map("name")
  phone           String   @map("phone")
  email           String   @map("email")
  address         String   @map("address")
  priceEstimation Decimal  @map("price_estimation") @db.Money
  status          String   @default("pending") @map("status")
  propertyData    Json?    @map("property_data")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("property_listing_requests")
}
